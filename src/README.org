- in-mem: the basic implementation; maintains a "cache state";
  expressed as state-passing functions; requires help to execute a
  call to the lower layer; API returns result together with a
  typically-empty list of evictees

- multithreaded: includes lists of threads blocked on particular keys
  (multiple reader, single writer); 
  
  The idea is that the first thread that needs to make a "slow" call
  to disk to execute find(k), first creates a list of waiters, then
  calls out to disk; on return, the thread activates all waiters
  before returning; in the meantime, if another thread needs find(k),
  they discover that the call is in process, and so they suspend
  themselves after adding themselves to the wait list


